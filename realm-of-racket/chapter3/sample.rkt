#lang racket
(expt 53 53)
(/ 4 6)
(sqrt -1)
(/ 4.0 6)
(string-append "tutti" "frutti")
(cons 1 2)
(define cell (cons 'a 'b))
(car cell)
(cdr cell)
(cons 'chicken empty)
(cons 'chicken '())
(struct student (name id# dorm))
(define freshman1 (student 'Joe 1234 'NewHall))
(struct example2 (p q r) #:transparent)
(zero? 42)
(symbol=? 'a 'b)
(define (add-to-front x)
  (cons x '(1 2 3)))
(equal? 4 "arul")
